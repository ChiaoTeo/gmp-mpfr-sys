# Copyright © 2017–2020 University of Malta

# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved. This file is offered as-is,
# without any warranty.

skip_tags: true

branches:
  except:
    - www

environment:
  matrix:
    - CI_OS: mac
      APPVEYOR_BUILD_WORKER_IMAGE: macos
    - CI_OS: mac
      APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
    - CI_OS: win
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      HOST: x86_64-pc-windows-gnu
      CONFIG_SITE: C:/msys64/mingw64/etc/config.site
      MINGW_CHOST: x86_64-w64-mingw32
      MINGW_PACKAGE_PREFIX: mingw-w64-x86_64
      MINGW_PREFIX: C:/msys64/mingw64
      MSYSTEM: MINGW64
      MSYSTEM_CARCH: x86_64
      MSYSTEM_CHOST: x86_64-w64-mingw32
      MSYSTEM_PREFIX: C:/msys64/mingw64
      PKG_CONFIG_PATH: C:\msys64\mingw64\lib\pkgconfig;C:\msys64\mingw64\share\pkgconfig
    - CI_OS: win
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      HOST: i686-pc-windows-gnu
      CONFIG_SITE: C:/msys64/mingw32/etc/config.site
      MINGW_CHOST: i686-w64-mingw32
      MINGW_PACKAGE_PREFIX: mingw-w64-i686
      MINGW_PREFIX: C:/msys64/mingw32
      MSYSTEM: MINGW32
      MSYSTEM_CARCH: i686
      MSYSTEM_CHOST: i686-w64-mingw32
      MSYSTEM_PREFIX: C:/msys64/mingw32
      PKG_CONFIG_PATH: C:\msys64\mingw32\lib\pkgconfig;C:\msys64\mingw32\share\pkgconfig

build: false

for:
  -
    matrix:
      only:
        - CI_OS: mac
    cache:
      - $HOME/.cargo/registry/cache
    install:
      - echo $PLATFORM
      - PATH="$PATH:$HOME/.cargo/bin"
      - curl --proto =https --tlsv1.2 -sSf -o rustup-init.sh https://sh.rustup.rs
      - sh rustup-init.sh -y --default-toolchain none --no-modify-path
      - rustup --version
      - rustup toolchain install --profile minimal beta 1.37.0
      - rustup component add --toolchain beta rustfmt clippy
      - gcc --version
    before_test:
      - if [ -d $HOME/.cargo/registry/src ]; then rm -r $HOME/.cargo/src; fi
      - if [ -d $HOME/.cargo/registry/cache ]; then cd $HOME/.cargo/registry; find cache -name \*.crate; fi
    test_script:
      - cargo +beta test --features fail-on-warnings
      - cargo +beta test --release --features fail-on-warnings
      - cargo +beta fmt -- --check
      - cargo +beta clippy --all-targets --features fail-on-warnings
      - rm Cargo.lock
      - cargo +1.37.0 test --features fail-on-warnings
      - cargo +1.37.0 test --release --features fail-on-warnings
    after_test:
      - if [ -d $HOME/.cargo/registry/cache ]; then cd $HOME/.cargo/registry; for c in cache/*/*.crate; do s=src/${c#cache/}; if [ ! -e ${s/.crate/} ]; then rm -v $c; fi; done; find cache -name \*.crate; fi

  -
    matrix:
      only:
        - CI_OS: win
    cache:
      - '%USERPROFILE%\.cargo\registry\cache'
    install:
      - echo %PLATFORM%
      - set PATH=C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%USERPROFILE%\.cargo\bin;%PATH%
      - curl --proto =https --tlsv1.2 -sSf -o rustup-init.exe https://win.rustup.rs
      - rustup-init.exe -y --default-toolchain none --no-modify-path
      - rustup --version
      - rustup toolchain install --profile minimal beta-%HOST% 1.37.0-%HOST%
      - rustup component add --toolchain beta-%HOST% rustfmt clippy
      - gcc --version
    before_test:
      - bash -c "if [ -d $USERPROFILE/.cargo/registry/src ]; then rm -r $USERPROFILE/.cargo/src; fi"
      - bash -c "if [ -d $USERPROFILE/.cargo/registry/cache ]; then cd $USERPROFILE/.cargo/registry; find cache -name \*.crate; fi"
    test_script:
      - cargo +beta-%HOST% test --features fail-on-warnings
      - cargo +beta-%HOST% test --release --features fail-on-warnings
      - cargo +beta-%HOST% fmt -- --check
      - cargo +beta-%HOST% clippy --all-targets --features fail-on-warnings
      - rm Cargo.lock
      - cargo +1.37.0-%HOST% test --features fail-on-warnings
      - cargo +1.37.0-%HOST% test --release --features fail-on-warnings
      # Install fresh GMP, MPFR, MPC now to avoid interference with gcc package
      - pacman -Sy --noconfirm %MINGW_PACKAGE_PREFIX%-gmp %MINGW_PACKAGE_PREFIX%-mpfr %MINGW_PACKAGE_PREFIX%-mpc
      - cargo clean
      - cargo +beta-%HOST% test --features "fail-on-warnings use-system-libs"
      - cargo +beta-%HOST% test --release --features "fail-on-warnings use-system-libs"
    after_test:
      - bash -c "if [ -d $USERPROFILE/.cargo/registry/cache ]; then cd $USERPROFILE/.cargo/registry; for c in cache/*/*.crate; do s=src/${c#cache/}; if [ ! -e ${s/.crate/} ]; then rm -v $c; fi; done; find cache -name \*.crate; fi"
